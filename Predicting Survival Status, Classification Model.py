# -*- coding: utf-8 -*-
"""Predicting Survival Status, Classification Model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_xloRDpsFTpoUrKL058QajMnCNuUvU0d
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import pandas as pd 
import seaborn as sns
# %matplotlib inline
from matplotlib import pyplot as plt
from matplotlib import style


from sklearn import linear_model
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import Perceptron
from sklearn.linear_model import SGDClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC, LinearSVC
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split

url = 'https://raw.githubusercontent.com/jbrownlee/Datasets/master/haberman.csv'
list_cols = ['age','patient year','N_positive_ax','survival_status']
df = pd.read_csv(url, names=list_cols)

df.head()

X = df.drop('survival_status', axis = 1)
y = df['survival_status']

X.head()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=121)

random_forest = RandomForestClassifier(n_estimators=50)
random_forest.fit(X_train, y_train)

from sklearn.model_selection import cross_val_score
random = RandomForestClassifier(n_estimators=50)
scores = cross_val_score(RandomForestClassifier(n_estimators=50), X_train, y_train, cv=5)
scores.mean()

y_predict = random_forest.predict(X_test)
y_predict

from sklearn.model_selection import cross_val_predict
from sklearn.metrics import confusion_matrix
predictions = cross_val_predict(random, X_train, y_train, cv=5)
confusion_matrix(y_train, predictions)

from sklearn.metrics import f1_score
f1_score(y_train, predictions)

from sklearn.metrics import precision_score, recall_score

precision_score(y_train, predictions)

recall_score(y_train, predictions)

"""Based on confusion matrix, 145 out of 168 people who are positive succesfully identified accurately (0.803). Its recall rate is 145/193 (0.751).

On the other hand, to predict negative people, 13 out of 61 people identified sucessfully, with recall rate of 13/36 (0.361).
"""