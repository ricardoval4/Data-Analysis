# -*- coding: utf-8 -*-
"""Salinan dari Session 19 - Intermediate Dataframe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1of6rvOjhWhREZYhQXmUSRVl5RzRrp-rW
"""

# Import Package 
import numpy as np
import pandas as pd

# Load Data

col = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'flower_class']

df = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', names=col)
df.head()

#Show first 10 data
df[ ['sepal_length','sepal_width'] ].head(10)

# Filter by a condition

df[df.flower_class == 'Iris-virginica']

# Filter by one condition using loc

df.loc[df.flower_class == 'Iris-setosa'].head()

# Filter multiple conditions using loc

df.loc[ (df.flower_class == 'Iris-setosa') & (df.sepal_length == 5.1) ]

#Filter multiple (or) conditions

df[(df.flower_class == 'Iris-setosa') | (df.sepal_length == 5.1)]

# Assign new value to existing columns

df.loc[(df.flower_class == 'Iris-setosa'), ['flower_class']] = 'Flower Class V2'
df.head()

# Filter using isin() function
df.loc[ df.flower_class.isin(['Iris-setosa', 'Iris-virginica']), ['flower_class', 'sepal_length']]

# Select range of rows and range of columns

df.iloc[[0,2],[1,3]]

# Add additional column

df['sepal_length_v2'] = df['sepal_length'] * df['sepal_width']

df

# Add additional column based on certain condition

df.loc[ (df.sepal_length < 5), 'sepal_length_type'] = 'Small'
df.loc[ (df.sepal_length > 5), 'sepal_length_type'] = 'Big'
df.loc[ (df.sepal_length == 5), 'sepal_length_type'] = 'Equal'

df.head()

# Using groupby function

df.groupby('flower_class')

df.groupby('flower_class').count()

df.groupby('flower_class')['sepal_length'].mean()

# Using groupby and agg function together

df.groupby('flower_class').agg(average_sepal_length_per_class = ('sepal_length', 'mean'),
                               median_sepal_length_per_class = ('sepal_length', 'median'),
                               sum_sepal_length_per_class = ('sepal_length', 'sum') )

# Filter the dataframe first, then groupby and aggregate the dataframe

df[df.flower_class.isin(['Iris-setosa', 'Iris-versicolor'])].groupby('flower_class').agg( average_sepal_length_per_class = ('sepal_length', 'mean'),
                                                                                          median_sepal_length_per_class = ('sepal_length', 'median'),
                                                                                          sum_sepal_length_per_class = ('sepal_length', 'sum') )

# Aggregate dataframe using pivot_table function, with 1 value

pd.pivot_table(df, values = 'sepal_width', index = 'flower_class', aggfunc = ['mean', 'median'])

# Aggregate dataframe using pivot_table function, with multiple values


pd.pivot_table(df, values = ['sepal_width', 'sepal_length'], index = 'flower_class', aggfunc = ['mean', 'median'])

# Groupby by more than 1 column

df.groupby(['flower_class', 'sepal_length_type']).agg(average_sepal_length_per_class = ('sepal_length', 'mean'),
                                                      median_sepal_length_per_class = ('sepal_length', 'median'),
                                                      sum_sepal_length_per_class = ('sepal_length', 'sum') )